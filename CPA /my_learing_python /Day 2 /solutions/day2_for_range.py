# ==============================================================================
# Day 2: 파이썬 흐름 제어 및 함수 활용 스터디 기록 - 문제 2-1
# [문제 2-1] 1부터 10까지 합계
# ==============================================================================

# --- [사전 준비] ---
# print() 문을 통해 결과를 확인하세요.


# --- [최초 나의 코딩] ---
# total_sum = 0
#
# for num in range(10): # range(10)은 0부터 9까지의 숫자를 생성함
#     total_sum += num
#
# print(f"합계 : {total_sum}") # 이 시점의 합계는 45 (0부터 9까지의 합)

# --- [코드 실행 결과] ---
"""
(예시)
합계 : 45
"""

# --- [피드백] ---
"""
`total_sum = 0`으로 초기화하고, `for` 반복문을 사용해 합계를 누적하는 방식으로 코드를 잘 작성했음.

하지만 `range(10)`은 0부터 9까지의 숫자를 생성하므로, 문제에서 요구한 '1부터 10까지의 합계'와는 다른 결과가 나왔음. 이 부분을 스스로 발견하고 학습 기록에 추가하는 것이 중요함.
"""

# --- [모범 답안 (수정)] ---
# total_sum = 0
#
# for num in range(1, 11): # 10을 포함하기 위해 11까지 설정해야 함
#     total_sum += num
#
# print(f"합계 : {total_sum}") # 이 시점의 합계는 55 (1부터 10까지의 합)

# --- [학습 기록] ---
"""
**학습 질문**: 1부터 10까지의 정수 합계를 `for` 반복문과 `range()` 함수를 사용하여 어떻게 계산할까?

**문제 해결**:
1.  **변수 초기화 및 반복문**: `total_sum`을 0으로 초기화하고 `for` 반복문을 사용하여 숫자를 하나씩 더하도록 로직을 구성했음.
2.  **`range()` 함수의 범위 오류 및 수정**: 최초 `range(10)`으로 작성했을 때 0부터 9까지만 합산되어 45가 나왔음. **`range()` 함수의 '끝' 숫자는 포함되지 않는다는 점(`stop` 값은 exclusive)**을 깨닫고, 10을 포함하기 위해 `range(1, 11)`으로 수정하여 1부터 10까지의 합계인 55를 얻었음.

**추가 학습**:
-   **`range()` 함수의 정확한 범위 이해 (Further Study 필요)**: `range(stop)`, `range(start, stop)`, `range(start, stop, step)` 세 가지 사용법에서 'stop' 값은 항상 **미만(exclusive)**이라는 점을 명확히 기억해야 함. 이는 반복문에서 원하는 범위를 정확히 지정하는 데 매우 중요함.
-   **[공인회계사 업무 연관성]**:
    * **반복적인 계산 및 데이터 집계 자동화 (Further Study 필요)**: 회계 업무에서는 월별, 분기별, 연도별 데이터 합계, 특정 계정 과목의 누적 금액 계산 등 반복적인 수치 계산이 매우 많음. `for` 반복문과 `range()`는 이러한 계산을 자동화하여 수작업 오류를 줄이고 효율성을 높이는 데 필수적임. (예: 12개월 재무 데이터 처리, 특정 기간 비용 합산)
    * **재무 데이터의 누적 분석**: 특정 기간 동안의 매출, 비용, 이익 등을 누적하여 분석할 때 반복문은 데이터를 체계적으로 집계하고 분석 결과를 도출하는 데 유용함.
"""
