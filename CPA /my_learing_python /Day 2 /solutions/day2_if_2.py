# ==============================================================================
# Day 2: [문제 1-2] 학점 계산기 (Day 2 학습 내용)
# ==============================================================================

# --- [사전 준비] ---
# 사용자 입력이 필요한 경우, 주석 처리된 input() 함수를 해제하고 사용하세요.
# print() 문을 통해 결과를 확인하세요.


# --- [최초 나의 코딩] ---
# grade = int(input("성적을 입력하세요: "))
#
# if grade >= 90:
#     print(f"해당 성적은 A입니다.")
# elif 90 > grade >= 80: # 위에 x >= 90 했으면 90 > 이거 안해도 된다고 했는데 효율적이지 못했음
#     print(f"해당 성적은 B입니다.")
# elif 80 > grade >= 70:
#     print(f"해당 성적은 C입니다.")
# else:
#     print(f"해당 성적은 F입니다.")

# --- [코드 실행 결과] ---
"""
(예시)
성적을 입력하세요: 85
해당 성적은 B입니다.

성적을 입력하세요: 92
해당 성적은 A입니다.
"""

# --- [피드백] ---
"""
`if-elif-else` 구조를 사용해 학점을 분류하는 로직을 정확하게 구현했음. 특히 `90 > grade >= 80`과 같은 **복합 조건문**을 정확하게 사용한 점이 좋았음.

하지만 스스로 "위에 `x >= 90` 했으면 `90 >` 이거 안 해도 된다고 했는데 효율적이지 못했음"이라고 지적했던 부분이 매우 중요함. 파이썬의 `if-elif-else` 구조는 **순차적으로 조건을 검사**하기 때문에, 앞선 조건에서 이미 걸러진 내용은 다시 명시적으로 확인할 필요가 없음.
"""

# --- [모범 답안 (최적화)] ---
# grade = int(input("성적을 입력하세요: "))
#
# if grade >= 90:
#     print(f"해당 성적은 A입니다.")
# elif grade >= 80: # 90점 미만이면서 80점 이상인 경우만 여기에 도달함
#     print(f"해당 성적은 B입니다.")
# elif grade >= 70: # 80점 미만이면서 70점 이상인 경우만 여기에 도달함
#     print(f"해당 성적은 C입니다.")
# else: # 70점 미만인 경우
#     print(f"해당 성적은 F입니다.")

# --- [학습 기록] ---
"""
**학습 질문**: 여러 학점 기준에 따라 조건문을 효율적으로 작성하려면 어떻게 해야 할까?

**문제 해결**:
1.  **다중 조건문 사용**: **`if-elif-else` 구조**를 사용하여 다양한 성적 구간에 따라 학점을 분류했음.
2.  **조건 순서 및 간결화**: 최초에는 `elif 90 > grade >= 80`처럼 복합 조건을 명시했지만, 'if-elif-else'가 순차적으로 조건을 검사한다는 점을 깨닫고 `elif grade >= 80`처럼 조건을 간결화했음. (예: `grade >= 80`에 도달했다면 이미 `grade < 90`임이 보장됨)

**추가 학습**:
-   **순차적 조건 검사의 이해 (Further Study 필요)**: 'if-elif-else' 문에서 파이썬은 위에서부터 아래로 조건을 하나씩 검사하며, 한 조건이 `True`가 되면 해당 블록을 실행하고 나머지 `elif`와 `else` 블록은 건너뛴다는 점을 명확히 이해했음. 이는 코드의 효율성과 가독성에 중요한 영향을 미침.
"""
