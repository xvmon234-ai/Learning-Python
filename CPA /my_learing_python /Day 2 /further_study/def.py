# --- Day 2: 함수 - 함수의 독립성과 재사용성 ---
"""
[주제]
함수가 매개변수를 통해 데이터를 받는 이유: 독립성과 재사용성

[개념 설명]
함수는 특정 작업을 수행하는 '블랙 박스'와 같습니다.
이 블랙 박스가 작동하기 위해 필요한 입력은 **매개변수**를 통해 받습니다.

1.  **독립성**:
    * 함수가 외부의 특정 변수(예: `my_numbers`)에 직접 의존하면, 그 함수는 해당 변수가 있는 곳에서만 제대로 작동하거나, 변수 이름이 바뀌면 함수도 수정해야 합니다.
    * **매개변수**를 통해 데이터를 받으면, 함수는 외부 환경으로부터 독립적으로 존재할 수 있습니다. 어떤 리스트든 매개변수로 전달받아 처리할 수 있게 됩니다.

2.  **재사용성**:
    * 독립성이 확보되면 함수의 재사용성이 극대화됩니다.
    * 예를 들어, `calculate_average` 함수는 `my_scores` 리스트뿐만 아니라, `student_grades`, `product_prices` 등 **어떤 숫자 리스트라도** 받아서 평균을 계산할 수 있습니다.
    * 만약 함수가 `my_numbers`에 고정되어 있었다면, 다른 리스트의 평균을 구할 때마다 함수를 새로 만들거나 `my_numbers`의 내용을 바꿔야 하는 비효율이 발생합니다.

[결론]
함수를 설계할 때는 필요한 모든 데이터를 매개변수로 받아서 처리하도록 하는 것이 좋습니다.
이는 코드를 더 유연하고 강력하게 만들며, 예측 불가능한 버그를 줄이는 데 기여합니다.
"""
