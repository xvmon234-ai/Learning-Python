# ==============================================================================
# [문제 1-2] 리스트(List) (Day 1 학습 내용)
# ==============================================================================

# --- [문제 요구사항] ---
# 1. scores = [85, 92, 78, 90] 리스트를 선언하세요.
# 2. scores 리스트에 65를 추가하세요.
# 3. scores 리스트에서 92라는 값을 삭제하세요.
# 4. scores 리스트를 오름차순으로 정렬하세요.
# 5. 최종 리스트를 출력하세요.

# --- [최초 나의 코딩] ---
scores = [85, 92, 78, 90]
scores.append(65)
scores.remove(92)
scores.sort()
print(scores)

# --- [코드 실행 결과] ---
"""
[65, 78, 85, 90]
"""

# --- [피드백] ---
"""
문제 1-2를 완벽하게 해결하셨습니다!
`append()`, `remove()`, `sort()` 등 리스트의 핵심 메서드들을 능숙하게 사용하여 요구사항을 정확히 충족했습니다.
"""

# --- [모범 답안] ---
# 최초 나의 코딩이 모범적으로 해결되었으므로, 추가적인 모범 답안은 생략합니다.

# --- [학습 기록] ---
"""
**학습 질문**: 리스트에 요소를 추가, 삭제, 정렬하는 기본적인 방법은?

**문제 해결 과정**:
1.  `scores` 리스트를 초기화했습니다.
2.  `append()` 메서드를 사용하여 리스트의 끝에 새로운 점수(65)를 추가했습니다.
3.  `remove()` 메서드를 사용하여 특정 값(92)을 리스트에서 삭제했습니다.
4.  `sort()` 메서드를 사용하여 리스트를 오름차순으로 정렬했습니다.
5.  최종 리스트의 상태를 출력하여 변경 사항을 확인했습니다.

**추가 학습 (공인회계사 업무와의 관련성)**:
* **데이터 정제 및 관리**: 재무 데이터(예: 거래 목록, 자산 목록)는 지속적으로 추가, 수정, 삭제될 수 있습니다. 리스트의 `append()`, `remove()` 등은 이러한 데이터를 효율적으로 관리하고 정제하는 데 필수적입니다.
* **데이터 정렬**: 거래 내역을 날짜 순, 금액 순으로 정렬하거나, 계정 과목을 코드 순으로 정렬하는 등 데이터를 특정 기준으로 정렬하는 것은 재무 분석 및 보고서 가독성을 높이는 데 매우 중요합니다. `sort()`와 `sorted()`의 차이 (원본 변경 vs. 새 리스트 반환)를 이해하는 것은 데이터 무결성 관리에도 도움이 됩니다.
"""
