# ==============================================================================
# Day 1 심화 학습: 딕셔너리 [] 문법과 데이터프레임의 연관성
# ==============================================================================

# 딕셔너리가 {}로 정의되는데, 왜 값을 가져오거나 수정할 때는 []를 쓸까?
# 그리고 이 문법은 데이터프레임과 어떤 연관이 있을까?

# ------------------------------------------------------------------------------
# 1. []는 '접근(Access)'과 '할당(Assignment)'의 공통 문법
# ------------------------------------------------------------------------------
# []는 파이썬에서 특정 요소에 접근하거나 값을 할당할 때 사용하는 보편적인 문법입니다.
# 딕셔너리가 리스트처럼 보이기 때문이 아니라, 데이터를 찾아가는 '탐색자' 역할을 합니다.

# 리스트에서 [] 사용 예시
# -> 순서를 나타내는 '인덱스'로 요소에 접근합니다.
my_list = ['사과', '바나나', '체리']
print(f"리스트의 0번 인덱스 요소: {my_list[0]}")
# 출력: 사과

# 딕셔너리에서 [] 사용 예시
# -> 순서가 아닌 '키(Key)'로 요소에 접근합니다.
my_dict = {'fruit1': '사과', 'fruit2': '바나나'}
print(f"딕셔너리의 'fruit1' 키에 해당하는 값: {my_dict['fruit1']}")
# 출력: 사과

# ------------------------------------------------------------------------------
# 2. 딕셔너리 문법이 pandas 데이터프레임과 강하게 연관된 이유
# ------------------------------------------------------------------------------
# pandas 데이터프레임은 본질적으로 '열(Column) 이름'을 키로 가진 딕셔너리와 매우 유사합니다.
# 딕셔너리에서 키를 사용해 값에 접근하는 문법이 데이터프레임의 열을 선택하는 문법으로 확장됩니다.
# 따라서 딕셔너리 [] 문법을 이해하는 것은 pandas의 기본 사용법을 미리 익히는 것과 같습니다.

# pandas 예시 (pandas 라이브러리 설치 필요: pip install pandas)
import pandas as pd

# 딕셔너리를 사용하여 간단한 데이터프레임 생성
data = {
    '도시': ['서울', '부산', '제주'],
    '인구': [970, 340, 67]
}
df = pd.DataFrame(data)

# '도시'라는 열(Column)에 접근
print("\n데이터프레임에서 '도시' 열 선택:")
print(df['도시'])

# '인구'라는 열(Column)에 접근
print("\n데이터프레임에서 '인구' 열 선택:")
print(df['인구'])

# -> 여기서 df['도시']의 []가 바로 딕셔너리에서 키를 사용해 값에 접근하는 문법과 동일합니다.

```
