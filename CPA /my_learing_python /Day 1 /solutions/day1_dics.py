# ==============================================================================
# [문제 1-3] 딕셔너리(Dictionary) (Day 1 학습 내용)
# ==============================================================================

# --- [문제 요구사항] ---
# 1. product = {'name': '컴퓨터', 'price': 1200000} 딕셔너리를 선언하세요.
# 2. product 딕셔너리에 '재고': 100 키-값 쌍을 추가하세요.
# 3. product 딕셔너리의 'price' 값을 1150000으로 수정하세요.
# 4. for 루프와 .items() 메서드를 사용해 딕셔너리의 모든 키와 값을 "키: 값" 형식으로 출력하세요.

# --- [최초 나의 코딩] ---
product = {'name': '컴퓨터', 'price': 1200000}
product["재고"] = 100
product["price"] = 1150000

for key, value in product.items():
    print(key, value)

# --- [코드 실행 결과] ---
"""
name 컴퓨터
price 1150000
재고 100
"""

# --- [피드백] ---
"""
문제 1-3을 완벽하게 해결하셨습니다!
딕셔너리에 새로운 키-값 쌍을 추가하고, 기존 값을 수정하며, `for` 루프와 `.items()`를 사용하여 모든 요소를 순회하는 방법을 정확히 이해하고 적용했습니다.
"""

# --- [모범 답안] ---
# 최초 나의 코딩이 모범적으로 해결되었으므로, 추가적인 모범 답안은 생략합니다.
# 다만, 출력 형식을 문제 요구사항에 더 명확히 맞추는 것은 좋은 습관입니다.
# for key, value in product.items():
#     print(f"{key}: {value}")

# --- [학습 기록] ---
"""
**학습 질문**: 딕셔너리에 키-값 쌍을 추가, 수정하고, 모든 요소를 효율적으로 순회하는 방법은?

**문제 해결 과정**:
1.  `product` 딕셔너리를 초기화했습니다.
2.  `딕셔너리[새_키] = 값` 문법을 사용하여 `'재고'` 키에 `100` 값을 추가했습니다.
3.  동일한 문법으로 `'price'` 키의 값을 `1150000`으로 수정했습니다.
4.  `for key, value in 딕셔너리.items():` 문법을 사용하여 딕셔너리의 모든 키와 값을 동시에 가져와 출력했습니다.

**추가 학습 (공인회계사 업무와의 관련성)**:
* **마스터 데이터 관리**: 고객 정보, 제품 정보, 계정과목 정보 등 고유한 식별자(키)와 속성(값)을 가진 데이터를 딕셔너리 형태로 관리하는 것은 회계 시스템에서 매우 흔합니다.
* **데이터 조회 및 업데이트**: 특정 고객의 정보를 조회하거나, 제품 가격을 업데이트하는 등의 작업은 딕셔너리 접근 및 수정과 직접적으로 연결됩니다.
* **보고서 생성**: 특정 기준(예: 계정과목별)으로 요약된 데이터를 딕셔너리 형태로 구성하고 이를 순회하여 보고서를 생성하는 데 활용될 수 있습니다.
"""
