# ==============================================================================
# 삼일회계법인 신입공인회계사 디지털 전형 과제 면접 - 1일차 3회차 질의응답
# ==============================================================================

# 이 파일은 1일차 3회차 과제(재무 모델링 관련 코딩) 수행 후 진행된 질의응답 내용을 담고 있습니다.

# ---
# 면접관 (프로그래밍 개발자) 질의
# ---

# Q1. scipy.optimize.newton vs. numpy_financial.irr 선택 이유 및 장점
#    scipy.optimize.newton 함수를 사용하여 IRR을 계산했습니다. 이 함수 외에 numpy_financial 라이브러리의 npf.irr 함수를
#    사용할 수도 있는데, newton 함수를 선택한 특별한 이유가 있으셨나요? 만약 numpy_financial을 사용했다면 어떤 장점이 있었을까요?
"""
`scipy.optimize.newton`을 선택한 특별한 이유는 없습니다. 다만, `numpy_financial` 라이브러리의 설치가 되어 있지 않았거나,
`scipy` 라이브러리가 이미 설치되어 있었고, 뉴턴-랩슨(Newton-Raphson) 방법을 통해 직접 NPV를 0으로 만드는
할인율을 찾는 원리를 구현해보고 싶었기 때문일 수 있습니다.
또는, 수치해석적 접근 방식에 대한 이해를 보여드리고자 하는 의도도 있었습니다.

만약 `numpy_financial.irr`을 사용했다면 다음과 같은 장점이 있었을 것입니다:
1.  **편의성 및 간결성**: `numpy_financial.irr`은 재무 계산을 위해 특별히 설계된 함수이므로, 현금흐름 리스트만 인자로 넘겨주면
    별도의 NPV 함수 정의 없이 IRR을 바로 계산할 수 있어 코드가 더 간결하고 직관적입니다.
2.  **안정성 및 신뢰성**: 재무 계산에 특화된 라이브러리이므로, 다양한 엣지 케이스(Edge Cases)나 복잡한 현금흐름 패턴에 대해서도
    내부적으로 최적화된 알고리즘과 오류 처리 로직을 포함하고 있어 더 안정적이고 신뢰할 수 있는 결과를 제공할 가능성이 높습니다.
3.  **산업 표준**: 재무 분야에서 널리 사용되고 인정받는 라이브러리이므로, 협업 시 코드 이해도를 높일 수 있습니다.
"""

# Q2. NPV 계산 시 리스트 컴프리헨션의 장점 및 대규모 데이터 처리 방안
#    NPV 계산 함수에서 sum([cf / (1 + rate) ** i for i, cf in enumerate(cash_flows)])와 같이 리스트 컴프리헨션을 사용했습니다.
#    이 방식의 장점과, 만약 현금흐름이 수천 개 이상으로 매우 많아진다면 성능 측면에서 고려할 수 있는 다른 접근 방식이 있을까요?
"""
리스트 컴프리헨션 방식의 장점은 다음과 같습니다:
1.  **간결하고 가독성 높음**: 짧은 코드로 명확하게 각 현금흐름을 할인하는 로직을 표현할 수 있어 코드가 간결하고 이해하기 쉽습니다.
2.  **파이썬스러운(Pythonic) 코드**: 파이썬에서 반복적인 작업을 수행하는 효율적이고 권장되는 방식 중 하나입니다.
3.  **성능**: 일반적인 `for` 루프에 비해 내부적으로 최적화되어 있어, 상당한 규모의 데이터에서도 비교적 빠르게 동작합니다.

만약 현금흐름이 수천 개 이상으로 매우 많아진다면, 성능 측면에서 다음 접근 방식들을 고려할 수 있습니다:
1.  **NumPy 배열 연산**: 현금흐름 데이터를 `NumPy` 배열로 변환하고, 벡터화된(vectorized) 연산을 활용하는 것이 가장 효율적입니다.
    NumPy는 C 언어로 구현되어 있어 파이썬 루프보다 훨씬 빠르게 대규모 배열 연산을 수행할 수 있습니다.
    예시: `np.sum(cash_flows_array / (1 + rate) ** np.arange(len(cash_flows_array)))`
2.  **`numpy_financial` 활용**: 앞서 언급된 `numpy_financial.npv` 함수는 내부적으로 최적화된 NumPy 연산을 사용하므로,
    성능과 편의성 모두를 만족하는 좋은 대안입니다.
3.  **JIT 컴파일러 (Numba 등)**: Numba와 같은 JIT(Just-In-Time) 컴파일러를 사용하여 순수 파이썬 함수를
    고성능 머신 코드로 컴파일하여 실행 속도를 크게 향상시킬 수 있습니다.
"""

# ---
# 면접관 (회계사) 질의
# ---

# Q3. NPV와 IRR 결과의 상충 가능성 및 우선 지표 판단
#    NPV와 IRR은 투자 프로젝트의 경제성을 평가하는 대표적인 두 가지 방법입니다. 이 두 방법의 결과가 다르게 나타나거나,
#    상충될 수 있는 경우가 있을까요? 있다면 어떤 경우이며, 그럴 때 어떤 지표를 더 우선시해야 할까요?
"""
네, NPV와 IRR 결과가 다르게 나타나거나 상충될 수 있는 경우가 있습니다. 주요 상황은 다음과 같습니다.
1.  **투자 규모의 차이**: 서로 다른 초기 투자액을 가진 프로젝트들을 비교할 때 발생할 수 있습니다.
    IRR은 수익률을 나타내므로 작은 규모의 프로젝트가 높은 IRR을 가질 수 있지만, NPV는 절대적인 부의 증가량을 나타내므로
    큰 규모의 프로젝트가 더 높은 NPV를 가질 수 있습니다.
2.  **현금흐름 패턴의 차이**: 현금흐름이 불규칙하거나 중간에 음(-)의 현금흐름이 발생하는 경우 IRR은 다중 근을 가지거나
    계산 불가능할 수 있습니다. 또한, 현금흐름이 초기에 집중되는지 후기에 집중되는지에 따라 평가가 달라질 수 있습니다.
3.  **재투자율 가정**: NPV는 프로젝트에서 발생하는 현금흐름이 할인율(기업의 자본 비용)로 재투자된다고 가정하는 반면,
    IRR은 프로젝트에서 발생하는 현금흐름이 IRR 자체로 재투자된다고 가정합니다. IRR이 매우 높을 경우, 그 IRR로 현금흐름을
    재투자하는 것이 비현실적일 수 있습니다.

**어떤 지표를 더 우선시해야 하는가?**
일반적으로 **NPV를 더 우선시해야 합니다.** 그 이유는 다음과 같습니다.
1.  **부의 극대화**: NPV는 프로젝트가 기업의 가치를 얼마나 증가시키는지를 절대적인 금액으로 보여줍니다. 기업의 궁극적인 목표는
    주주의 부(wealth)를 극대화하는 것이므로, 부의 증가량을 직접적으로 나타내는 NPV가 더 적절한 의사결정 지표입니다.
2.  **재투자율 가정의 현실성**: NPV의 재투자율 가정(할인율)이 IRR의 재투자율 가정(IRR 자체)보다 더 현실적입니다.
3.  **다중 근 문제 해결**: 복잡한 현금흐름 패턴에서도 항상 단일한 값을 제공하므로, IRR의 다중 근 문제를 피할 수 있습니다.
다만, IRR은 프로젝트의 '수익률'을 직관적으로 보여주므로 경영진에게 설명하거나 프로젝트 간의 상대적 효율성을 비교할 때 유용하게 사용될 수 있습니다.
"""

# Q4. 할인율 결정 요인 (회계/재무적 관점)
#    할인율(10%)은 이 투자 프로젝트의 경제성 평가에 매우 중요한 요소입니다. 이 할인율이 실제 기업 환경에서 어떤 요인들을 고려하여 결정되는지
#    회계/재무적 관점에서 설명해 주십시오.
"""
할인율은 투자 프로젝트의 미래 현금흐름을 현재 가치로 환산할 때 적용하는 비율로, 프로젝트의 위험과 기업의 자본 비용을 반영합니다.
회계/재무적 관점에서 할인율은 주로 **가중평균자본비용(Weighted Average Cost of Capital, WACC)**을 사용하여 결정됩니다.

**WACC 구성 요소 및 고려 요인:**
1.  **타인자본비용 (Cost of Debt, Kd)**:
    * 기업이 빌린 자금(대출, 회사채 등)에 대해 지불하는 이자율입니다.
    * **고려 요인**: 시장 이자율, 기업의 신용등급, 부채의 만기, 부채 발행 비용 등이 고려됩니다.
    * **세금 효과**: 이자 비용은 법인세 계산 시 손비로 인정되어 세금 절감 효과가 있으므로, '세후 타인자본비용 = Kd * (1 - 법인세율)'을 사용합니다.
2.  **자기자본비용 (Cost of Equity, Ke)**:
    * 주주들이 기업에 투자한 자본(주식 발행 등)에 대해 요구하는 기대수익률입니다.
    * **고려 요인**: 주로 **자본자산가격결정모형(Capital Asset Pricing Model, CAPM)**을 사용하여 추정합니다.
        * **무위험이자율 (Risk-Free Rate)**: 국채 수익률 등 위험이 없는 투자로부터 얻을 수 있는 수익률입니다.
        * **시장 위험 프리미엄 (Market Risk Premium)**: 시장 전체에 투자했을 때 무위험이자율 대비 추가적으로 얻을 수 있는 기대수익률입니다.
        * **베타 (β)**: 특정 기업의 주가가 시장 전체의 움직임에 얼마나 민감하게 반응하는지를 나타내는 지표로, 기업의 시스템적 위험을 측정합니다.
3.  **가중치 (Weight)**:
    * 기업의 자본 구조(총 자본에서 부채와 자기자본이 차지하는 비율)를 반영합니다. 각 자본 유형의 시장 가치 기준으로 가중치를 계산합니다.
    * `WACC = (Kd * (1 - 법인세율) * 부채비율) + (Ke * 자기자본비율)`

**추가 고려 사항:**
* **프로젝트의 위험**: 특정 프로젝트가 기업의 평균적인 위험보다 높거나 낮다면, 해당 프로젝트에 맞는 조정된 할인율을 적용할 수 있습니다.
* **인플레이션**: 할인율은 미래 현금흐름의 구매력 감소를 반영할 수 있습니다.
* **환율 변동**: 해외 프로젝트의 경우 환율 변동 위험도 고려될 수 있습니다.
할인율은 단순히 자금 조달 비용을 넘어, 기업이 투자로부터 기대하는 최소한의 수익률이자 기회비용을 나타내는 중요한 지표입니다.
"""
