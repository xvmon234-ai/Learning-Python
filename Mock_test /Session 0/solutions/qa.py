# ==============================================================================
# 삼일회계법인 신입공인회계사 디지털 전형 과제 면접 - 0일차 1회차 질의응답
# ==============================================================================

# 이 파일은 0일차 1회차 과제(데이터 분석 및 시각화) 수행 후 진행된 질의응답 내용을 담고 있습니다.

# ---
# 면접관 (프로그래밍 개발자) 질의
# ---

# 1. 경과 개월 수 계산 방식의 장단점 및 개선 방안
#    dt.days / 30.44 방식을 사용한 것에 대한 장단점과 더 정확한 월 단위 계산 방법.
def answer_q1_dev():
    print("### Q1. 경과 개월 수 계산 방식의 장단점 및 개선 방안")
    print("간편하고 빠르게 경과 기간을 월 단위로 근사치 계산할 수 있다는 장점이 있었습니다.")
    print("단점으로는 모든 달의 일수가 다르므로 정확성이 부족하고, 회계적 불일치가 발생할 수 있습니다.")
    print("\n개선 방안으로는 'dateutil.relativedelta' 라이브러리를 활용하여 정확한 월 차이를 계산하거나,")
    print("판다스 DateOffset 또는 Timedelta와 커스텀 함수를 조합하여 회계 기준에 맞는 월 계산 로직을 구현하는 것을 고려할 수 있습니다.")

# 2. `.copy()`의 역할과 중요성
#    DataFrame에서 특정 조건을 필터링하거나 새로운 컬럼을 추가할 때 `.copy()`를 사용한 이유와 중요성.
def answer_q2_dev():
    print("\n### Q2. `.copy()`의 역할과 중요성")
    print("`.copy()`는 DataFrame이나 Series의 복사본을 명시적으로 생성할 때 사용합니다.")
    print("주요 역할은 'SettingWithCopyWarning'을 방지하고, 원본 데이터의 무결성을 보장하는 것입니다.")
    print("이를 통해 선택된 DataFrame 조작이 원본 데이터에 의도치 않은 영향을 미치지 않도록 하여 코드의 예측 가능성과 데이터 일관성을 유지할 수 있습니다.")

# ---
# 면접관 (회계사) 질의
# ---

# 3. 감가상각 누계액 상한 설정의 회계적 의미와 중요성
#    감가상각 누계액이 '취득원가 - 잔존가치'를 초과하지 않도록 한 로직의 회계적 의미와 중요성.
def answer_q3_accountant():
    print("\n### Q3. 감가상각 누계액 상한 설정의 회계적 의미와 중요성")
    print("이 로직은 회계 기준 준수와 자산의 장부가액 보호라는 중요한 의미를 가집니다.")
    print("회계적으로 자산의 감가상각 총액은 '취득원가 - 잔존가치'를 초과할 수 없으며, 자산의 가치를 잔존가치 이하로 떨어뜨릴 수 없습니다.")
    print("이는 재무제표의 신뢰성을 유지하고, 자산의 최소 가치를 회계적으로 보장하며, 향후 감사 및 규제 준수에 필수적입니다.")

# 4. 데이터 구조/회계 정책 변동 시 고려사항
#    데이터 구조나 회계 정책에 변동이 생길 경우, 코드에서 어떤 부분을 가장 먼저 수정하거나 고려해야 하는지.
def answer_q4_accountant():
    print("\n### Q4. 데이터 구조/회계 정책 변동 시 고려사항")
    print("가장 먼저 '데이터 로딩 및 전처리' 부분을 고려해야 합니다. 즉, 새로운 컬럼의 추가/삭제, 컬럼명 변경, 데이터 타입 변경 등에 맞춰 코드를 수정해야 합니다.")
    print("다음으로 '회계 정책 관련 파라미터' 부분을 점검해야 합니다. 감가상각 방법(정액법 외),
